--- a/src/main/java/com/vmware/vropspluginui/mvc/ServicesController.java

@@ -15,6 +15,7 @@ import java.io.StringWriter;
 import java.io.UnsupportedEncodingException;
 import java.net.HttpURLConnection;
 import java.net.MalformedURLException;
+import java.nio.file.Paths;
 import java.net.ProtocolException;
 import java.net.SocketTimeoutException;
 import java.net.URL;
@@ -420,6 +421,7 @@ public class ServicesController {
             logger.info("Size of the file received  : " + uploadFile.getSize());
             InputStream inputStream = uploadFile.getInputStream();
             File dir = new File("/tmp/unicorn_ova_dir");
+            String baseDirCanonical = dir.getCanonicalPath();
             if (!dir.exists()) {
                dir.mkdirs();
             } else {
@@ -441,7 +443,17 @@ public class ServicesController {
                if (entry.isDirectory()) {
                   entry = in.getNextTarEntry();
                } else {
-                  File curfile = new File("/tmp/unicorn_ova_dir", entry.getName());
+                  String entryName = entry.getName();
+                  
+                  
+                  if (entryName.contains("..") || entryName.startsWith("/") || entryName.startsWith("\\")) {
+                     logger.warn("Skipping potentially malicious entry: " + entryName);
+                     entry = in.getNextTarEntry();
+                     continue;
+                  }
+                  
+                  File curfile = new File("/tmp/unicorn_ova_dir", entryName);
+                  
                   File parent = curfile.getParentFile();
                   if (!parent.exists()) {
                      parent.mkdirs();
@@ -450,7 +462,14 @@ public class ServicesController {
                   OutputStream out = new FileOutputStream(curfile);
                   IOUtils.copy(in, out);
                   out.close();
-                  result.add(entry.getName());
+                  
+                  // 
+                  String curfileCanonical = curfile.getCanonicalPath();
+                  if (!curfileCanonical.startsWith(baseDirCanonical + File.separator)) {
+                     throw new SecurityException("Path traversal detected: " + entryName);
+                  }
+                  
+                  result.add(entryName);
                   entry = in.getNextTarEntry();
                }
             }